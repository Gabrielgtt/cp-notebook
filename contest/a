#include <bits/stdc++.h>
#define ll long long
#define mp make_pair
#define ii pair <int, int>
#define iii pair < pair <ll, ll> , ll>
#define f first
#define s second
#define INF 1e9
#define MAXN 500
using namespace std;

iii arr[100002];
ll acm[MAXN];
int n;

int bb(ll num){
	int left = 1, right = n;

	int mid;
	while (left <= right){
		mid = (left+right)/2;
		if (arr[mid].f.f <= num && arr[mid].f.s >= num){
			return mid;
		} 
		if (arr[mid].f.f > num){
			right = mid-1;
		} else {
			left = mid+1;
		}
	}
	return mid;
}

int main(){
	int t;
	scanf("%d", &t);

	while (t--){
		ll k;
		scanf("%d %lld", &n, &k);

		for (int i=1; i<=n; i++){
			scanf("%lld %lld %lld", &arr[i].f.f, &arr[i].f.s, &arr[i].s);
			acm[i] = arr[i].s * (arr[i].f.s - arr[i].f.f + 1);
			acm[i] += acm[i-1]; 
		}

		sort(arr+1, arr+n+1);

		ll sup = arr[n].f.s;
		ll res = 0;

		for (int i=1; i<=n; i++){
			if (arr[i].f.f + k - 1 <= arr[i].f.s){
				res = max(res, arr[i].s * k);
			} else {
				int index;
				if (arr[i].f.f + k - 1 > arr[n].f.s){
					index = n+1;
				} else {
					index = bb(arr[i].f.f + k - 1);				
				}

				// printf("index de %lld = %d\n", arr[i].f.f + k - 1, index);
				ll outro = acm[index-1] - acm[i-1] + (arr[index].s * (arr[i].f.f + k - arr[index].f.f));
				// printf("%lld\n", outro);
				res = max(res, outro);
				if (arr[i].f.s - k + 1 < arr[1].f.f){
					index = 0;
				} else {
					index = bb(arr[i].f.s - k + 1);
				}
				// printf("index de %lld = %d\n", arr[i].f.s - k + 1, index);
				outro = acm[i] - acm[index] + (arr[index].s * (arr[index].f.s - (arr[i].f.s - k)));
				// printf("%lld %lld %lld %lld\n", acm[i], acm[index], arr[index].s, (arr[index].f.s - (arr[i].f.s - k)) );
				// printf("%lld\n", outro);
				res = max(res, outro);
			}
		}

		printf("%lld\n", res);
	}

	return 0;
}